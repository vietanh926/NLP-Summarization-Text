








Một số bài toán điển hình về quy hoạch động | How Kteam






































































 Đăng ký
            

 Đăng nhập
            









PG
Pages



Khóa học





Lập trình





                                Lập trình C# .Net
                            



                                Lập trình C++
                            



                                Lập trình Android
                            



                                Điều trường học không dạy
                            



                                Thủ thuật lập trình
                            



                                Lập trình Java
                            



                                Unity3D
                            



                                Phân tích thiết kế
                            



                                Lập trình Python
                            



                                Lập trình PHP
                            



                                JavaScript - (Website)
                            



                                Lập trình Front-End
                            



                                Lập trình Mobile
                            





Microsoft Office 2016





                                Microsoft Word 2016
                            



                                Microsoft Excel 2016
                            



                                Microsoft PowerPoint 2016
                            





IT & Phần mềm





                                Thủ thuật máy tính
                            



                                Hướng dẫn cài đặt
                            



                                Bảo mật máy tính
                            



                                Phần cứng & Bảo mật
                            





Đồ họa hình ảnh





                                Adobe Photoshop LightRoom
                            





Kinh tế





                                Quản trị kinh doanh
                            



                                Kế toán
                            



                                Nhân sự
                            



                                SEO
                            



                                Marketing
                            





Ngoại ngữ





                                Tiếng anh
                            





Kỹ năng mềm





                                Kỹ năng mềm
                            





Tin tức





                                Tin tức công nghệ
                            






Khóa học



Hỏi đáp


Bài viết


Tag


Kter


Về Kteam


Tài trợ


Phản hồi
































































































































































 Đặt câu hỏi
                            

 Viết bài
                            

 Tạo series
                            






Tài khoản




 Đăng nhập
            

 Đăng ký
            









 














 











Một số bài toán điển hình về quy hoạch động
Cấu trúc dữ liệu và giải thuật









 5.0 (2 đánh giá)
                    



                        Tạo bởi Katsu


                        Cập nhật lần cuối 16:13 08-07-2022


5.946 lượt xem
                    

3 bình luận
                    


Tác giả/Dịch giả:


huulam3011



K9



                    Học nhanh
                    









































Khóa học
Lập trình
Lập trình C++
Cấu trúc dữ liệu và giải thuật
Một số bài toán điển hình về quy hoạch động

















                        Danh sách bài học
                    
























Một số bài toán điển hình về quy hoạch động


Cấu trúc dữ liệu và giải thuật


                        Tạo bởi Katsu


5.946


3





                    Học nhanh
                    








                            Một số bài toán điển hình về quy hoạch động
                        












                                        Nội dung bài viết
                                        
                                            Học nhanh
                                            








Bài trước


Bài sau










Dẫn nhập
Ở bài học trước, chúng ta đã có cái nhìn đầu tiên về quy hoạch động. Trong bài học này, chúng ta sẽ cùng nhau làm thử một số bài toán cơ bản về quy hoạch động nhé!
Nội dung
Để có thể tiếp thu bài học này một cách tốt nhất, các bạn nên có những kiến thức cơ bản về:

Tổng quan về Quy hoạch động

Trong bài học ngày hôm nay, chúng ta sẽ cùng nhau tìm hiểu về:

Một số bài toán điển hình về quy hoạch động 

Bài toán 1
Đề bài:
Cho n đồ vật, đồ vật thứ
i có trọng lượng là
ai và giá trị là
bi. Bạn có một cái balo có thể chứa được khối lượng tối đa là
W. Hỏi tổng giá trị lớn nhất của các đồ vật có thể cho vào balo là bao nhiêu?
Input:

Dòng 1: 2 số nguyên dương n,W lần lượt thể hiện cho số lượng đồ vật và khối lượng tối đa của balo
(n,W≤103)
Dòng 2…n+1: Mỗi dòng gồm hai số nguyên dương
ai và
bi lần lượt thể hiện cho trọng lượng và giá trị của đồ vật đó
(ai,bi ≤ 103)

Output:

Một số nguyên duy nhất là kết quả của bài toán

Ví dụ:



Input
Output



4 7
2 4
3 1
5 2
4 3     


7








Giải thích ví dụ:
Hai đồ vật được chọn là đồ vật thứ nhất và đồ vật thứ tư. Khi đó, tổng khối lượng các đồ vật trong balo là
2 + 4 = 6 và tổng giá trị các đồ vật là
4 + 3 = 7.

Ý tưởng
Ta thấy, nếu như ta chọn một đồ vật có khối lượng là
k thì khi đó, khối lượng mà balo có thể chứa còn lại là
W-k. Ta sẽ cần phải biết xem với khối lượng
W-k thì giá trị lớn nhất của các đồ vật mà balo có thể chứa là bao nhiêu. 

Gọi dp[i][j] là giá trị lớn nhất của các đồ vật có thể cho vào balo khi xét đến đồ vật thứ
i và trọng lượng balo là j. 

Dựa vào những gì mà ta đã nhận xét ở trên, ta rút ra công thức sau:

Công việc tiếp theo của chúng ta sẽ là tìm giá trị cơ sở. Ta thấy khi xét đồ vật đầu tiên thì trước đó hoàn toàn không thể có gì trong balo. Do đó,
dp[0][j] = 0 với j từ 0 đến 
W là giá trị cơ sở. Mặt khác, các giá trị này mặc định bằng 0 nên ta cũng không cần khởi tạo.
Theo các bạn, chuỗi suy luận trên của mình có thiếu sót gì không?
Trong toàn bộ quá trình trên, mình luôn đặt giả thiết là vật thứ i sẽ được chọn. Vậy nếu không chọn vật thứ i mà ta có được kết quả tốt hơn thì sao? Nếu không chọn vật thứ i thì
. Do đó, công thức đầy đủ là
 

Code

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const int MaxN = 1 + 1e3;

int n, w, a[MaxN], b[MaxN], dp[MaxN][MaxN];

int main(){
    freopen("CTDL.inp","r",stdin);
    freopen("CTDL.out","w",stdout);
    cin >> n >> w;
    for(int i = 1 ; i <= n ; ++i) cin >> a[i] >> b[i];
    for(int i = 1 ; i <= n ; ++i)
    for(int j = 1 ; j <= w ; ++j)
    if(j >= a[i]) dp[i][j] = max(dp[i - 1][j], dp[i - 1][j - a[i]] + b[i]);
    else dp[i][j] = dp[i - 1][j];
    int ans = 0;
    for(int i = 1 ; i <= w ; ++i) ans = max(ans, dp[n][i]);
    cout << ans << endl;

    return 0;
}


Lưu ý: Ở đoạn code trên của mình, phần lấy kết quả, mình phải xét hết tất cả các khối lượng mà balo có thể chứa. Lí do là vì không phải tổng trọng lượng các món đồ lớn nhất thì sẽ cho giá trị lớn nhất (giống như ví dụ).

Với việc sử dụng hai vòng lặp lồng nhau thì độ phức tạp thời gian của bài toán sẽ là
O(n×W).

Bài toán 2
Đề bài:
Cho hai xâu s và
w chỉ gồm các chữ cái latin in thường. Hãy tìm độ dài xâu con chung dài nhất của hai xâu biết xâu con chung của một xâu có thể thu được bằng cách xoá đi một số phần tử thuộc xâu đó.
Ví dụ: xâu “abd”, “bd” là xâu con của xâu “abcd”.
Input:

Gồm 2 dòng, mỗi dòng là một xâu chỉ gồm các chữ cái latin in thường, độ dài một xâu không vượt quá
103 
Output:

Số nguyên duy nhất là độ dài xâu con chung dài nhất của hai xâu

Ví dụ:



Input
Output



abcdbc
bdac


3





Giải thích ví dụ:
Xâu con chung dài nhất của hai xâu trong ví dụ là “bdc”.

Ý tưởng
Giả sử hai xâu s và w có độ dài xâu con chung dài nhất là
k. Ta thấy, nếu chèn thêm cùng một ký tự vào cuối hai xâu thì xâu con chung dài nhất sẽ có độ dài là k+1 và kết thúc tại ký tự này. Do đó, khi có hai ký tự trong hai xâu giống nhau thì ta sẽ quan tâm đến xâu con chung dài nhất
 của xâu phía trước hai ký tự này.
Gọi dp[i][j] là độ dài xâu con chung dài nhất của hai xâu khi ta xét đến
ký tự thứ i của xâu 
s và
ký tự thứ j của xâu 
w.
Ta thấy, nếu s[i]=w[j] thì
dp[i][j] = dp[i-1][j-1] + 1, tức là độ dài xâu con chung dài nhất kết thúc tại vị trí i
của xâu s và vị trí
j của xâu w sẽ là độ dài xâu con chung dài nhất của hai xâu
s1s2s3…si-1 và
w1w2w3…wj-1 rồi
 cộng thêm 1.
Còn nếu s[i]≠w[j] thì điều gì sẽ xảy ra? Ta thấy khi này sẽ không thể tồn tại một xâu con chung
 mà kí tự kết thúc ở xâu s là
si và
ký tự kết thúc ở xâu w là
wj. Do đó, ta sẽ cần quan tâm đến xâu con chung dài nhất mà kí tự kết thúc là
ký tự liền trước các kí tự này. Như vậy, ta có công thức
dp[i][j] = max(dp[i-1][j], dp[i][j-1]).
Trường hợp cơ sở của bài này khá đơn giản. Khi không có bất cứ ký tự nào thì độ dài xâu con chung dài nhất sẽ là 0 hay
dp[0][j] = 0 ∀j ≤ |w| và
dp[i][0] = 0 ∀i ≤ |s|. Mặc định các giá trị này bằng 0 nên ta không cần khởi tạo.
Như vậy, ta có công thức:
dp[i][j] = dp[i-1][j-1]+1
 nếu si = wj
dp[i][j] = dp[i-1][j],
 dp[i][j-1] nếu
si ≠ wj  
Code 

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const int MaxN = 1 + 1e3;

int dp[MaxN][MaxN];
string s, w;

int main(){
    freopen("CTDL.inp","r",stdin);
    freopen("CTDL.out","w",stdout);
    cin >> s;
    cin >> w;
    int n = s.length(), m = w.length();
    s = " " + s;
    w = " " + w;
    for(int i = 1 ; i <= n ; ++i)
    for(int j = 1 ; j <= m ; ++j)
    if(s[i] == w[j]) dp[i][j] = dp[i - 1][j - 1] + 1;
    else dp[i][j] = max(dp[i - 1][j], dp[i][j - 1]);
    cout << dp[n][m] << endl;

    return 0;
}


Lưu ý: Có thể một số bạn sẽ cảm thấy thắc mắc dòng code thứ 17 và 18. Lí do mình làm vậy là vì chỉ số các phần tử của xâu là
0,1,2,…,n-1 trong khi công thức của chúng ta bắt đầu từ 1 nên việc cộng thêm một phần tử trống ở phía trước sẽ làm chỉ số các phần tử của xâu bắt đầu từ 1.

Độ phức tạp thời gian của đoạn code trên là .

Bài toán 3
Đề bài:
Có một đoàn khách gồm n người xếp hàng mua vé xem phim. Người thứ
i có 2 lựa chọn: mua vé cho mình với giá tiền là
ai, mua vé cho mình và người phía sau (mua cho mình và người thứ
i+1) với giá
bi. Hỏi chi phí nhỏ nhất để mua vé cho toàn bộ
n người là bao nhiêu?
Input:

Dòng 1: số nguyên dương n thể hiện cho số người xếp hàng mua vé 
Dòng 2…n+1: Mỗi dòng gồm 2 số nguyên dương
ai và
bi lần lượt thể hiện cho số tiền phải trả nếu mua vé cho bản thân mình và số tiền phải trả nếu mua vé cho mình và người phía sau.

Output:

Số nguyên duy nhất là số tiền phải trả ít nhất để mua vé cho tất cả mọi người

Ví dụ:



Input
Output



4
3 2
4 1
3 6
2 1


6








Giải thích ví dụ:
Người thứ nhất sẽ mua vé cho mình, người thứ hai sẽ mua vé cho mình và người thứ ba, người thứ tư sẽ mua vé cho mình. Tổng chi phí là
3+1+2=6.

Ý tưởng
Bài toán này thực chất khá đơn giản và giống với bài toán thứ nhất.

Gọi dp[i] là chi phí nhỏ nhất để mua vé từ người thứ
i đến người thứ
n. Ta thấy, nếu người thứ I mua vé cho chính mình thì
dp[i] = dp[i+1] + a[i], nếu người thứ i mua vé cho mình và người phía sau thì
dp[i] = dp[i+2] + b[i]. Ta chỉ cần so sánh hai chi phí này và lấy giá trị nhỏ hơn.
Do đó, công thức của bài toán này là dp[i][j] = min(dp[i+1] + a[i], dp[i+2] + b[i]).
Trường hợp cơ sở của bài toán này cũng giống như các bài toán ở trên, khi chưa mua vé cho ai thì chi phí mua vé bằng 0 hay
dp[n+1] = 0.
Tuy nhiên, bài toán này có một chi tiết khác với các bài toán ở trên. Ta thấy, ở người cuối cùng (i = n), người này sẽ không thể mua vé cho người nào phía sau. Nếu như áp dụng công thức trên với người cuối
 cùng, trong trường hợp b[n]<a[n], chúng ta sẽ để người cuối cùng mua vé cho cả người thứ
n+1 (vô lí). Do vậy, chúng ta sẽ cần xét riêng người thứ
n.

Code

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const int MaxN = 1 + 1e3;

int n, a[MaxN], b[MaxN], dp[MaxN];

int main(){
    freopen("CTDL.inp","r",stdin);
    freopen("CTDL.out","w",stdout);
    cin >> n;
    for(int i = 1 ; i <= n ; ++i) cin >> a[i] >> b[i];
    dp[n] = a[n];
    for(int i = n - 1 ; i >= 1 ; --i) dp[i] = min(dp[i + 1] + a[i], dp[i + 2] + b[i]);
    cout << dp[1] << endl;

    return 0;
}

Độ phức tạp thời gian của đoạn code trên là .

Mở rộng
Đọc xong phần trên, liệu có bạn nào thắc mắc: “Tại sao
dp[i] phải là chi phí mua vé từ người thứ i đến người thứ
n. Nếu ta coi dp[i] là chi phí mua vé từ người thứ nhất đến người thứ i được không?”. Câu trả lời là hoàn toàn có. Hãy thử tự code với cách thứ hai. Đây sẽ là một phần bài tập nhỏ cho các bạn nhé!

Kết luận
Qua bài này chúng ta đã nắm về Một số bài toán điển hình về quy hoạch động
Bài sau chúng ta sẽ đi đến với bài cuối cùng trong 
khóa học này 
Một số tài liệu tham khảo và chia sẻ kết thúc 
Cảm ơn các bạn đã theo dõi bài viết. Hãy để lại bình luận hoặc góp ý của mình để phát triển bài viết tốt hơn. Đừng quên “Luyện tập – Thử thách – Không ngại khó”.


Tải xuống

Tài liệu
Nhằm phục vụ mục đích học tập Offline của cộng đồng, Kteam hỗ trợ tính năng lưu trữ nội dung bài học Một số bài toán điển hình về quy hoạch động dưới dạng file PDF trong link bên dưới.
Ngoài ra, bạn cũng có thể tìm thấy các tài liệu được đóng góp từ cộng đồng ở mục TÀI LIỆU trên thư viện Howkteam.com

Đừng quên like và share để ủng hộ Kteam và tác giả nhé!





Thảo luận
Nếu bạn có bất kỳ khó khăn hay thắc mắc gì về khóa học, đừng ngần ngại đặt câu hỏi trong phần BÌNH LUẬN bên dưới hoặc trong mục HỎI & ĐÁP trên thư viện Howkteam.com để nhận được sự hỗ trợ từ cộng đồng.



CỘNG ĐỒNG HỎI ĐÁP HOWKTEAM.COM





GROUP THẢO LUẬN FACEBOOK











                                        Nội dung bài viết
                                    













Tác giả/Dịch giả








huulam3011


Mình là Nguyễn Hữu Lâm, một người có niềm đam mê rất lớn đối với lập trình. Hiện tại, mình đang là sinh viên Khoa học máy tính của Đại học Bách Khoa Hà Nội. Mong muốn của mình là có thể chia sẻ những kiến thức mà bản thân có cho mọi người, học hỏi, kết bạn
 với tất cả những người có cùng đam mê với mình.










K9


Nhà sáng lập Howkteam.com, KQuiz.vn & tác giả các khóa học C#, Auto, Unity3D, Python....
Với mong muốn mang đến kiến thức chất lượng, miễn phí cho mọi người, với tâm huyết phá bỏ rào cản kiến thức từ việc giáo dục thu phí. Tôi đã cùng đội ngũ Kteam đã lập nên trang website này để thế giới phẳng hơn.
Hãy cùng chúng tôi lan tỏa kiến thức đến cộng đồng! 









Khóa học



Cấu trúc dữ liệu và giải thuật


Bạn đã từng đau đầu với các cấu trúc stack, queue,.. hoặc cảm thấy cực kỳ khó khăn với các thuật toán sắp xếp, tìm kiếm được sử dụng trong lập trình. Đừng lo lắng! Trong khoá học này, chúng ta sẽ cùng nhau tìm hiểu một cách đơn giản nhất về cấu
 trúc dữ liệu và giải thuật, cũng như giúp bạn nắm rõ hơn về các kiến thức này.
Hãy cùng xem cấu trúc dữ liệu và giải thuật có gì đáng sợ không nhé!







Đánh giá















LTVINH
đã đánh giá
22:49 25-12-2023









                            Bạn có thể giúp tôi ý tưởng bài toán. Đoàn xe qua cầu đc ko ạ.
                        



 Báo cáo
                        














thach010204
đã đánh giá
10:00 03-10-2023









                            Bài học rất dễ hiểu , mong kteam ngày càng phát triển ạ
                        



 Báo cáo
                        













Bình luận








Để bình luận, bạn cần đăng nhập bằng tài khoản Howkteam.
Đăng nhập
















LTVINH
đã bình luận
22:51 25-12-2023


Ai có thể giúp tôi ý tưởng và cách viết CT bài toán " đoàn xe qua cầu" ko ạ?




0
0

Trả lời

 Báo cáo
                        














prhrurcr09
đã bình luận
14:00 19-08-2023


công nhận cái này khó mà hay vãi. Mà hình như anh ơi, ở bài toán 1, mục ý tưởng cỗ công thức truy hồi ad nhầm chỗ a[i] với b[i] có phải không ạ




1
0

Trả lời

 Báo cáo
                        

Xem tất cả 1 câu trả lời






















 Danh sách bài giảng




 Nội dung





 Không có video.




 Danh sách bài giảng










Đánh giá và Nhận xét

































Thông tin Kteam

Về Kteam
Dịch vụ
Liên hệ

Đóng góp từ cộng đồng

Tài trợ
Người ủng hộ



Lĩnh vực



Khoá học



Cộng đồng

Hỏi đáp
Tài liệu
Chiến dịch

Liên kết

Vted - Học toán online chất lượng cao
Lập trình VB.NET
Linux Team Việt Nam



Kết nối với Kteam
Kết nối với Kteam qua mạng xã hội




Chứng nhận








Howkteam © 2024
















Quan tâm

















 Tag theo dõi
                        












































Yêu cầu đăng nhập








Để sử dụng tính năng này, Bạn cần đăng nhập bằng tài khoản Howkteam.
Đăng nhập









AD BLOCKER DETECTED

            Để xem được nội dung và giúp Kteam duy trì hoạt động. 
Bạn vui lòng tắt Adblock trên website howkteam.vn nhé!



















































